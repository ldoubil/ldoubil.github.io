# 工作流名称：将 Astro 部署到 GitHub Pages
name: 自动部署

# 触发条件：当代码被推送到 main 分支时执行
on:
  workflow_dispatch:
  repository_dispatch:
    types: [manual-trigger]

# 定义工作流程中的任务
jobs:
  # 构建任务
  build:
    # 指定运行环境为最新版本的 Ubuntu
    runs-on: ubuntu-latest

    # 定义任务的具体步骤
    steps:
      # 步骤1：检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: ldoubil/astro_blog
          token: ${{ secrets.GH_TOKEN }}

      # 新增步骤：缓存 node_modules
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 步骤2：设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'  # 使用 Node.js 18 版本

      # 步骤3：安装项目依赖
      - name: 安装项目依赖
        run: pnpm install  # 使用 pnpm 安装依赖

      # 步骤4：构建 Astro 静态文件
      - name: 构建 Astro 静态文件
        run: npm run build  # 运行构建命令生成静态文件

      # 新增步骤：创建 CNAME 文件
      - name: Create CNAME file
        run: echo 'acg-n.cn' > build/CNAME  # 将自定义域名写入 CNAME 文件
    
    
        # 新增步骤：将 build 打包
      - name: 打包 build
        run: tar -czvf build.tar.gz build/  # 将 build 文件夹打包为 build.tar.gz

        # 新增步骤：发布打包文件
      - name: 发布打包文件
        uses: actions/upload-artifact@v4
        with:
            name: build
            path: build.tar.gz

      # 步骤5：配置 Git 用户信息
      - name: 配置 Git 用户信息
        run: |
          git config --global user.name '会做饭的二哈'  # 设置 Git 用户名
          git config --global user.email '会做饭的二哈@baikaiwen12@outlook.com'  # 设置 Git 邮箱

      # 步骤6：部署到 GitHub Pages
      - name: 部署到 GitHub Pages
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # 使用 GitHub 密钥进行身份验证
        run: |
          cd build/  # 进入生成的静态文件目录
          git init  # 初始化 Git 仓库
          git add -A  # 添加所有文件到暂存区
          git commit -m "Create by workflows"  # 提交更改
          git remote add origin https://${{ secrets.GH_TOKEN }}@github.com/ldoubil/ldoubil.github.io.git  # 添加远程仓库
          git push origin HEAD:blog -f  # 强制推送到 main 分支
