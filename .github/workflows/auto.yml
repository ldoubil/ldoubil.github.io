name: 自动部署 🚀

on:
  workflow_dispatch:
  repository_dispatch:
    types: [manual-trigger]

jobs:
  build:  # 保留英文名
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码库 📥
        uses: actions/checkout@v2
        with:
          repository: ldoubil/astro_blog
          token: ${{ secrets.GH_TOKEN }}

      - name: 缓存 pnpm 🗄️
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 设置 Node.js ⚙️
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: 安装 pnpm 📦
        run: npm install -g pnpm

      - name: 安装项目依赖 📂
        run: pnpm install

      - name: 构建 Astro 静态文件 🏗️
        run: npm run build  # 构建产物会生成到 `dist` 目录

      - name: 检查构建目录 🔍
        run: ls -la dist  # 确保 dist 目录存在

      - name: 创建 CNAME 文件 📄
        run: echo 'acg-n.cn' > dist/CNAME  # 确保写入到 dist 目录

      - name: 打包构建产物 📦
        run: tar -czvf dist.tar.gz dist/  # 打包 dist 目录

      - name: 发布打包文件 🚚
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist.tar.gz

      - name: 配置 Git 用户信息 👤
        run: |
          git config --global user.name 'ldoubil'
          git config --global user.email 'baikaiwen12@outlook.com'  # 注意邮箱格式修正

      - name: 部署到 GitHub Pages 🌐
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd dist/  # 进入正确的构建目录
          git init
          git add -A
          git commit -m "Create by workflows"
          # 确保目标仓库和分支正确
          git remote add origin https://${{ secrets.GH_TOKEN }}@github.com/ldoubil/ldoubil.github.io.git
          git push origin HEAD:blog -f  # 强制推送到 blog 分支
